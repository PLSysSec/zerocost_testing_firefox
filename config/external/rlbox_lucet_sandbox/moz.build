# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

if CONFIG['MOZ_WASM_SANDBOXING_ZEROCOST']:
    EXPORTS.mozilla.rlbox += [
        '/third_party/rust/rlbox_lucet_sandbox/include/lucet_sandbox.h',
        '/third_party/rust/rlbox_lucet_sandbox/include/rlbox_lucet_sandbox.hpp',
    ]

    SOURCES += [
        'rlbox_lucet_thread_locals.cpp'
    ]

elif CONFIG['MOZ_WASM_SANDBOXING_STOCK'] or CONFIG['MOZ_WASM_SANDBOXING_STOCK32'] or CONFIG['MOZ_WASM_SANDBOXING_STOCKINDIRECT'] or CONFIG['MOZ_WASM_SANDBOXING_STOCKINDIRECT32']:
    pass
elif CONFIG['MOZ_WASM_SANDBOXING_LUCET']:
    EXPORTS.mozilla.rlbox += [
        '/../rlbox_lucetstock_sandbox/include/lucet_sandbox.h',
        '/../rlbox_lucetstock_sandbox/include/rlbox_lucet_sandbox.hpp'
    ]

    SOURCES += [
        'rlbox_lucet_thread_locals.cpp'
    ]
elif CONFIG['MOZ_WASM_SANDBOXING_FULLSAVE'] or CONFIG['MOZ_WASM_SANDBOXING_REGSAVE'] or CONFIG['MOZ_WASM_SANDBOXING_FULLSAVEWINDOWS']:

    EXPORTS.mozilla.rlbox += [
        '/../zerocost_testing_sandbox/include/lucet_sandbox.h',
        '/../zerocost_testing_sandbox/include/rlbox_lucet_sandbox.hpp'
    ]

    EXPORTS += [
        '/../zerocost_heavy_trampoline/include/ctx_save_trampoline.hpp',
        '/../zerocost_heavy_trampoline/include/ctx_save_trampoline_internal.hpp'
    ]

    LOCAL_INCLUDES += [
        '/../zerocost_heavy_trampoline/include/',
    ]

    SOURCES += [
        '/../zerocost_heavy_trampoline/c_src/trampoline_asm_64.S',
        '/../zerocost_heavy_trampoline/c_src/trampoline_src.cpp',
        'rlbox_lucet_thread_locals.cpp'
    ]
elif CONFIG['MOZ_WASM_SANDBOXING_MPKFULLSAVE'] or CONFIG['MOZ_WASM_SANDBOXING_MPKFULLSAVE32']:

    EXPORTS.mozilla.rlbox += [
        '/../rlbox_mpk_sandbox/include/rlbox_mpk_sandbox.hpp'
    ]

    EXPORTS += [
        '/../zerocost_heavy_trampoline/include/ctx_save_trampoline.hpp',
        '/../zerocost_heavy_trampoline/include/ctx_save_trampoline_internal.hpp'
    ]

    LOCAL_INCLUDES += [
        '/../zerocost_heavy_trampoline/include/',
    ]

    if CONFIG['MOZ_WASM_SANDBOXING_MPKFULLSAVE']:
        SOURCES += [
        '/../zerocost_heavy_trampoline/c_src/trampoline_asm_64.S',
        ]
    else:
        SOURCES += [
        '/../zerocost_heavy_trampoline/c_src/trampoline_asm_32.S',
        ]

    SOURCES += [
        '/../zerocost_heavy_trampoline/c_src/trampoline_src.cpp',
        'rlbox_other_thread_locals.cpp'
    ]

elif CONFIG['MOZ_WASM_SANDBOXING_MPKZEROCOST']:

    EXPORTS.mozilla.rlbox += [
        '/../rlbox_mpkzerocost_sandbox/include/rlbox_mpk_sandbox.hpp'
    ]

    SOURCES += [
        'rlbox_other_thread_locals.cpp'
    ]

elif CONFIG['MOZ_WASM_SANDBOXING_SEGMENTSFIZEROCOST']:

    EXPORTS.mozilla.rlbox += [
        '/../rlbox_segmentsfizerocost_sandbox/include/rlbox_segmentsfi_sandbox.hpp'
    ]

    EXPORTS += [
        '/../rlbox_segmentsfizerocost_sandbox/include/segmentsfi_sandbox_runtime.h'
    ]

    SOURCES += [
        '/../rlbox_segmentsfizerocost_sandbox/c_src/segmentsfi_sandbox_runtime.cpp',
        '/../rlbox_segmentsfizerocost_sandbox/c_src/trampoline.S',
        'rlbox_other_thread_locals.cpp'
    ]

elif CONFIG['MOZ_WASM_SANDBOXING_NACLFULLSAVE32']:

    EXPORTS.mozilla.rlbox += [
        '/../rlbox_nacl_sandbox/include/rlbox_nacl_sandbox.hpp'
    ]

    EXPORTS += [
        '/../rlbox_nacl_sandbox/build_release/_deps/modnacl-src/native_client/src/trusted/dyn_ldr/dyn_ldr_lib.h'
    ]

    SOURCES += [
        'rlbox_other_thread_locals.cpp'
    ]

    if CONFIG["MOZ_DEBUG"]:
        OS_LIBS += ['-L$(topsrcdir)/../rlbox_nacl_sandbox/build_release/_deps/modnacl-src/native_client/scons-out-firefox/dbg-linux-x86-32/lib']
    else:
        OS_LIBS += ['-L$(topsrcdir)/../rlbox_nacl_sandbox/build_release/_deps/modnacl-src/native_client/scons-out-firefox/opt-linux-x86-32/lib']

    OS_LIBS += [
        '-ldyn_ldr', '-lsel', '-lnacl_error_code', '-lenv_cleanser', '-lnrd_xfer', '-lnacl_perf_counter', '-lnacl_base', '-limc',
        '-lnacl_fault_inject', '-lnacl_interval', '-lplatform_qual_lib', '-lvalidators', '-ldfa_validate_caller_x86_32', '-lcpu_features',
        '-lvalidation_cache', '-lplatform', '-lgio', '-lnccopy_x86_32']

else:
    error('Sandboxing transition type not set')

FINAL_LIBRARY = 'xul'